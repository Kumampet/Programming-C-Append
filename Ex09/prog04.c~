#include <stdio.h>
#include <stdlib.h>
#include <math.h>

/* マクロ定義 */
#define N     256//キャンバスサイズ
#define RD    64//半径
#define BLACK '1'
#define WHITE '0'

/* 構造体宣言 */
typedef struct{
  int    x;
  int    y;
} XYdata;

/* 関数のプロトタイプ宣言 */
void init(void);
void rev(XYdata);
void circle(XYdata);
void imgout(void);

/* 外部変数の定義 */
char data[N][N];//画素データ

int main(int argc, char *argv[])
{
  XYdata cent;
  int ncent, i;

  /* コマンドラインから円の中心座標を何組か入力される */
  cent = (int)malloc((argc-1) * sizeof(int));
  for(i=0; i<argc; i++){
    cent[i].x=atoi(argv[i+1]);
    cent[i].y=atoi(argv[i+2]);
  }
  
  /* 入力された中心座標が何組あるか計算 */
  ncent = (argc-1)/2 ;

  /* 画像初期化関数(すべて白くする)を呼ぶ */
  init();

  /* 座標の組の数だけ繰返し… */

  /* 円の内部を白黒反転する */
  //circle( cent );

  /* 表示 */
  imgout();
}

/* すべての点を白に初期化する関数 */
void init(void){
  int i,j;
  for(i=0; i<N; i++){
    for(j=0; j<N; j++){
      printf("%c",data[i][j]=WHITE);
    }
    printf("\n");
  }
}

/* 引数で指示された座標の点一つを白黒反転する関数 */
//void rev(XYdata a){
//}

/* 引数で指示された座標を中心に,半径 RD 以内の点を白黒反転する関数 */
//void circle(XYdata c){
//}

/* Plain PBM形式で画像データを出力する関数 */
void imgout(void){
  int i,j;

  //P1と画素数出力
  printf("P1\n");
  printf("%d %d\n",N,N);

  //実際のデータ出力
  for(j=0; j<N; j++){
    for(i=0; i<N; i++){
      printf("%c",data[i][j]);
    }
    printf("\n");
  }
}
